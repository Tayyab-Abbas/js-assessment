{"ast":null,"code":"import { required, email, sameAs, minLength } from \"vuelidate/lib/validators\";\nexport default {\n  data() {\n    return {\n      contacts: {\n        name: \"\",\n        email: \"\",\n        phone: \"\",\n        gender: \"\",\n        password: \"\",\n        confirmPassword: \"\"\n      },\n      isValid: false\n    };\n  },\n  validations: {\n    contacts: {\n      name: {\n        required\n      },\n      email: {\n        required,\n        email\n      },\n      phone: {\n        required\n      },\n      gender: {\n        required\n      },\n      password: {\n        required,\n        minLength: minLength(6)\n      },\n      confirmPassword: {\n        required,\n        sameAsPassword: sameAs('password')\n      }\n    }\n  },\n  methods: {\n    onFormSubmit() {\n      this.isValid = true;\n      this.$v.$touch();\n      if (this.$v.$invalid) {\n        return;\n      }\n      this.axios.post('http://localhost:8888/contacts', this.contacts).then(response => {\n        this.resetForm();\n        console.log(response.data);\n      });\n    }\n  }\n};","map":{"version":3,"mappings":"AAkFA;AAEA;EACAA;IACA;MACAC;QACAC;QACAC;QACAC;QACAC;QACAC;QACAC;MACA;MACAC;IACA;EACA;EACAC;IACAR;MACAC;QACAQ;MACA;MACAP;QACAO;QACAP;MACA;MACAC;QACAM;MACA;MACAL;QACAK;MACA;MACAJ;QACAI;QACAC;MACA;MACAJ;QACAG;QACAE;MACA;IACA;EACA;EACAC;IACAC;MACA;MAEA;MACA;QACA;MACA;MAEA;QACA;QACAC;MACA;IACA;EACA;AACA","names":["data","contacts","name","email","phone","gender","password","confirmPassword","isValid","validations","required","minLength","sameAsPassword","methods","onFormSubmit","console"],"sourceRoot":"src/components","sources":["WelcomeScreen.vue"],"sourcesContent":["<template>\r\n  <div class=\"container\">\r\n\r\n      <h2 class=\"mt-5 mb-5 text-center\">Vue Client Side Form Validation Example</h2>\r\n\r\n      <form @submit.prevent=\"onFormSubmit\">\r\n          <div class=\"form-group\">\r\n              <label>Name</label>\r\n              <input type=\"text\" v-model=\"contacts.name\" id=\"name\" name=\"name\" class=\"form-control\"\r\n                  :class=\"{ 'is-invalid': isValid && $v.contacts.name.$error }\" />\r\n              \r\n              <div v-if=\"isValid && !$v.contacts.name.required\" class=\"invalid-feedback\">Name is required</div>\r\n          </div>\r\n\r\n          <div class=\"form-group\">\r\n              <label>Email</label>\r\n              <input type=\"email\" v-model=\"contacts.email\" id=\"email\" name=\"email\" class=\"form-control\"\r\n                  :class=\"{ 'is-invalid': isValid && $v.contacts.email.$error }\" />\r\n              \r\n              <div v-if=\"isValid && $v.contacts.email.$error\" class=\"invalid-feedback\">\r\n                  <span v-if=\"!$v.contacts.email.required\">Email is required</span>\r\n                  <span v-if=\"!$v.contacts.email.email\">Email is not valid</span>\r\n              </div>\r\n          </div>\r\n\r\n         <div class=\"form-group\">\r\n              <label>Phone</label>\r\n              <input type=\"text\" v-model=\"contacts.phone\" id=\"phone\" name=\"phone\" class=\"form-control\"\r\n                  :class=\"{ 'is-invalid': isValid && $v.contacts.phone.$error }\" />\r\n              \r\n              <div v-if=\"isValid && $v.contacts.phone.$error\" class=\"invalid-feedback\">\r\n                  <span v-if=\"!$v.contacts.phone.required\">Phone number is required</span>\r\n              </div>\r\n          </div>\r\n\r\n           <div class=\"form-group\">\r\n              <label>Gender</label>\r\n              <div class=\"form-group\" :class=\"{ 'is-invalid': isValid && $v.contacts.gender.$error }\">\r\n                  <div class=\"form-check form-check-inline\" :class=\"{ 'is-invalid': isValid && $v.contacts.gender.$error }\">\r\n                      <input class=\"form-check-input\" type=\"radio\" name=\"gender\" v-model=\"contacts.gender\" id=\"gender1\" value=\"male\">\r\n                      <label class=\"form-check-label\" for=\"gender1\">Male</label>\r\n                  </div>\r\n                  <div class=\"form-check form-check-inline\" :class=\"{ 'is-invalid': isValid && $v.contacts.gender.$error }\">\r\n                      <input class=\"form-check-input\" type=\"radio\" name=\"gender\" v-model=\"contacts.gender\" id=\"gender2\" value=\"female\">\r\n                      <label class=\"form-check-label\" for=\"gender2\">Female</label>\r\n                  </div>\r\n\r\n                  <div v-if=\"isValid && $v.contacts.gender.$error\" class=\"invalid-feedback\">\r\n                      <span v-if=\"!$v.contacts.gender.required\">This field is required</span>\r\n                  </div>                    \r\n              </div>\r\n          </div>\r\n\r\n          <div class=\"form-group\">\r\n              <label>Password</label>\r\n              <input type=\"password\" v-model=\"contacts.password\" id=\"password\" name=\"password\" class=\"form-control\"\r\n                  :class=\"{ 'is-invalid': isValid && $v.contacts.password.$error }\" />\r\n              <div v-if=\"isValid && $v.contacts.password.$error\" class=\"invalid-feedback\">\r\n                  <span v-if=\"!$v.contacts.password.required\">Password field is required</span>\r\n                  <span v-if=\"!$v.contacts.password.minLength\">Maxium 6 characters allowed</span>\r\n              </div>\r\n          </div>\r\n\r\n          <div class=\"form-group\">\r\n              <label>Confirm Password</label>\r\n              <input type=\"password\" v-model=\"contacts.confirmPassword\" id=\"confirmPassword\" name=\"confirmPassword\"\r\n                  class=\"form-control\" :class=\"{ 'is-invalid': isValid && $v.contacts.confirmPassword.$error }\" />\r\n              <div v-if=\"isValid && $v.contacts.confirmPassword.$error\" class=\"invalid-feedback\">\r\n                  <span v-if=\"!$v.contacts.confirmPassword.required\">Confirm Password field is required</span>\r\n                  <span v-else-if=\"!$v.contacts.confirmPassword.sameAsPassword\">Passwords should be matched</span>\r\n              </div>\r\n          </div>\r\n\r\n          <div class=\"form-group\">\r\n              <button class=\"btn btn-primary btn-block\">Submit</button>\r\n          </div>\r\n      </form>\r\n      \r\n  </div>\r\n</template>\r\n\r\n<script>\r\n  import { required, email, sameAs, minLength } from \"vuelidate/lib/validators\";\r\n\r\n  export default {\r\n      data() {\r\n          return {\r\n              contacts: {\r\n                  name: \"\",\r\n                  email: \"\",\r\n                  phone: \"\",\r\n                  gender: \"\",\r\n                  password: \"\",\r\n                  confirmPassword: \"\"\r\n              },\r\n              isValid: false\r\n          };\r\n      },\r\n      validations: {\r\n          contacts: {\r\n              name: {\r\n                  required\r\n              },\r\n              email: {\r\n                  required,\r\n                  email\r\n              },\r\n              phone: {\r\n                  required\r\n              },\r\n              gender: {\r\n                  required\r\n              },\r\n              password: {\r\n                  required,\r\n                  minLength: minLength(6)\r\n              },\r\n              confirmPassword: {\r\n                  required,\r\n                  sameAsPassword: sameAs('password')\r\n              }\r\n          }\r\n      },\r\n      methods: {\r\n          onFormSubmit() {              \r\n              this.isValid = true;\r\n\r\n              this.$v.$touch();\r\n              if (this.$v.$invalid) {\r\n                  return;\r\n              }\r\n\r\n              this.axios.post('http://localhost:8888/contacts', this.contacts).then((response) => {\r\n                  this.resetForm();\r\n                  console.log(response.data);\r\n              })\r\n          }\r\n      },\r\n  };\r\n</script>\r\n\r\n\r\n<style lang=\"css\">\r\n  .container {\r\n      max-width: 500px !important; \r\n      text-align: left;\r\n      margin: 0 auto;\r\n  }\r\n  label {\r\n      font-weight: 600;\r\n  }\r\n</style>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { required, email } from \"vuelidate/lib/validators\";\nimport '../styles/global.css';\nexport default {\n  name: 'LoginScreen',\n  data() {\n    return {\n      contacts: {\n        email: \"\",\n        password: \"\"\n      },\n      token: 'xyz',\n      isValid: false\n    };\n  },\n  validations: {\n    contacts: {\n      email: {\n        required,\n        email\n      },\n      password: {\n        required\n      }\n    }\n  },\n  methods: {\n    onFormSubmit() {\n      this.isValid = true;\n      this.$v.$touch();\n      if (this.$v.$invalid) {\n        return;\n      }\n      this.axios.post('http://3.232.244.22/api/login', this.contacts, {\n        headers: {\n          \"Content-type\": \"application/json\",\n          \"Authorization\": `Bearer ${this.tokenAvailable}`\n        }\n      }).then(response => {\n        //   this.resetForm();\n        console.log(response);\n        if (response.success == true) {\n          window.localStorage.setItem('accessToken', response.user.token);\n          this.$router.push('/');\n        } else {\n          console.log(\"Api failed\");\n          window.localStorage.setItem('accessToken', 'null');\n        }\n      });\n    },\n    signUp() {\n      this.$router.push('/register');\n    }\n  }\n};","map":{"version":3,"mappings":";AA4CA;AACA;AAEA;EACAA;EACAC;IACA;MACAC;QACAC;QACAC;MACA;MACAC;MACAC;IACA;EACA;EACAC;IACAL;MACAC;QACAK;QACAL;MACA;MACAC;QACAI;MACA;IACA;EACA;EACAC;IACAC;MACA;MAEA;MACA;QACA;MACA;MACA;QAAAC;UAAA;UAAA;QAAA;MAAA;QACA;QACAC;QACA,8BACA;UAAAC;UACA;QACA,OACA;UACAD;UACAC;QAEA;MACA;IACA;IACAC;MACA;IACA;EAEA;AACA","names":["name","data","contacts","email","password","token","isValid","validations","required","methods","onFormSubmit","headers","console","window","signUp"],"sourceRoot":"src/components","sources":["LoginScreen.vue"],"sourcesContent":["<template>\n  <div class=\"container\">\n  <div class=\"loginScreen\">\n  <div class=\"login-body\">\n    <div class=\"card-cover\">\n      <form @submit.prevent=\"onFormSubmit\">\n        <div class=\"Screen-card p-4 p-sm-3 \">\n        <div class=\"head-title\">\n              <h2>Login</h2>\n            </div>\n          <div class=\"form-group\">\n              <label>Email</label>\n              <input type=\"email\" v-model=\"contacts.email\" id=\"email\" name=\"email\" class=\"form-control\"\n                  :class=\"{ 'is-invalid': isValid && $v.contacts.email.$error }\" />\n              \n              <div v-if=\"isValid && $v.contacts.email.$error\" class=\"invalid-feedback\">\n                  <span v-if=\"!$v.contacts.email.required\">Email is required</span>\n                  <span v-if=\"!$v.contacts.email.email\">Email is not valid</span>\n              </div>\n          </div>\n\n          <div class=\"form-group\">\n              <label>Password</label>\n              <input type=\"password\" v-model=\"contacts.password\" id=\"password\" name=\"password\" class=\"form-control\"\n                  :class=\"{ 'is-invalid': isValid && $v.contacts.password.$error }\" />\n              <div v-if=\"isValid && $v.contacts.password.$error\" class=\"invalid-feedback\">\n                  <span v-if=\"!$v.contacts.password.required\">Password field is required</span>\n              </div>\n          </div>\n          <div class=\"form-group card-button\">\n              <button class=\"btn btn-primary btn-block submit-button\">Submit</button>\n          </div>\n          <div class=\"screen-Link\">\n                <p>Do you have an account? <span role=\"button\" @click=\"signUp\">Sign Up</span></p>\n          </div>\n        </div>\n      </form>\n    </div>\n  </div>\n</div>\n  </div>\n</template>\n\n<script>\n  import { required, email } from \"vuelidate/lib/validators\";\n  import '../styles/global.css'\n\n  export default {\n    name: 'LoginScreen',\n      data() {\n          return {\n              contacts: {\n                  email: \"\",\n                  password: \"\",\n              },\n              token:'xyz',\n              isValid: false\n          };\n      },\n      validations: {\n          contacts: {\n              email: {\n                  required,\n                  email\n              },\n              password: {\n                  required,\n              },\n          }\n      },\n      methods: {\n          onFormSubmit() {              \n              this.isValid = true;\n\n              this.$v.$touch();\n              if (this.$v.$invalid) {\n                  return;\n              }\n              this.axios.post('http://3.232.244.22/api/login', this.contacts,{headers: {\"Content-type\": \"application/json\",\"Authorization\": `Bearer ${this.tokenAvailable}`}}).then((response) => {\n                //   this.resetForm();\n                console.log(response);\n                if(response.success==true)\n                 {window.localStorage.setItem('accessToken', response.user.token)\n                  this.$router.push('/');\n                  } \n                  else{\n                    console.log(\"Api failed\");\n                    window.localStorage.setItem('accessToken', 'null')\n\n                  }\n              })\n          },\n          signUp(){\n              this.$router.push('/register');\n            }\n          \n      },\n  };\n</script>\n\n\n<style lang=\"css\">\n  .container {\n      max-width: 500px !important; \n      text-align: left;\n      margin: 0 auto;\n  }\n  label {\n      font-weight: 600;\n  }\n</style>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nexport default {\n  /* eslint-disable */\n\n  name: 'TodoList',\n  data() {\n    return {\n      items: [{\n        title: 'lab1',\n        description: {\n          first: 'DickersonMacdonald'\n        }\n      }, {\n        title: 'lab2',\n        description: {\n          first: 'LarsenShaw'\n        }\n      }, {\n        title: 'lab3',\n        description: {\n          first: 'MiniNavarro'\n        }\n        // _rowVariant: 'success'\n      }, {\n        title: 'lab4',\n        description: {\n          first: 'GenevaWilson'\n        }\n      }, {\n        title: 'lab5',\n        description: {\n          first: 'JamiCarney'\n        }\n      }, {\n        title: 'lab6',\n        description: {\n          first: 'EssieDunlap'\n        }\n      }, {\n        title: 'lab7',\n        description: {\n          first: 'ThorMacdonald'\n        }\n      }, {\n        title: 'lab8',\n        description: {\n          first: 'LarsenShaw'\n        }\n        // _cellVariants: { title: 'danger' }\n      }, {\n        title: 'lab9',\n        description: {\n          first: 'MitziNavarro'\n        }\n      }, {\n        title: 'lab10',\n        description: {\n          first: 'GenevieveWilson'\n        }\n      }, {\n        title: 'lab11',\n        description: {\n          first: 'JohnCarney'\n        }\n      }, {\n        title: 'lab12',\n        description: {\n          first: 'DickDunlap'\n        }\n      }],\n      fields: [{\n        key: 'description',\n        label: 'Description',\n        sortable: false,\n        sortDirection: 'desc'\n      }, {\n        key: 'title',\n        label: 'title',\n        sortable: false,\n        class: 'text-center'\n      }, {\n        key: 'actions',\n        label: 'Actions'\n      }],\n      totalRows: 1,\n      filter: null,\n      filterOn: [],\n      infoModal: {\n        id: 'info-modal',\n        title: '',\n        content: ''\n      }\n    };\n  },\n  computed: {},\n  mounted() {\n    let tokenAvailable = window.localStorage.getItem('accessToken');\n    this.tokenAvailable = tokenAvailable;\n    this.totalRows = this.items.length;\n    this.axios.get('http://3.232.244.22/api/items', '', {\n      headers: {\n        \"Content-type\": \"application/json\",\n        \"Authorization\": `Bearer ${this.tokenAvailable}`\n      }\n    }).then(response => {\n      //   this.resetForm();\n      console.log(response.data);\n      let tableData = response.data.items.data;\n      this.items = tableData;\n    });\n  },\n  methods: {\n    infoRow(item, index, button) {\n      this.$router.push('/updatetodo');\n\n      // this.infoModal.title = `Row index: ${index}`\n      // this.infoModal.content = JSON.stringify(item, null, 2)\n      // this.$root.$emit('bv::show::modal', this.infoModal.id, button)\n    },\n\n    deleteRow(item, index, button) {\n\n      // this.infoModal.title = `Row index: ${index}`\n      // this.infoModal.content = JSON.stringify(item, null, 2)\n      // this.$root.$emit('bv::show::modal', this.infoModal.id, button)\n    },\n    // resetInfoModal() {\n    //   this.infoModal.title = ''\n    //   this.infoModal.content = ''\n    // },\n    createRow() {\n      this.$router.push('/createtodo');\n    },\n    onFiltered(filteredItems) {\n      this.totalRows = filteredItems.length;\n    }\n  }\n};","map":{"version":3,"mappings":";AA6FA;EACA;;EAEAA;EACAC;IACA;MACAC,QACA;QAAAC;QAAAC;UAAAC;QAAA;MAAA,GACA;QAAAF;QAAAC;UAAAC;QAAA;MAAA,GACA;QAEAF;QAAAC;UAAAC;QAAA;QACA;MACA,GACA;QAAAF;QAAAC;UAAAC;QAAA;MAAA,GACA;QAAAF;QAAAC;UAAAC;QAAA;MAAA,GACA;QAAAF;QAAAC;UAAAC;QAAA;MAAA,GACA;QAAAF;QAAAC;UAAAC;QAAA;MAAA,GACA;QACAF;QAAAC;UAAAC;QAAA;QACA;MACA,GACA;QAAAF;QAAAC;UAAAC;QAAA;MAAA,GACA;QAAAF;QAAAC;UAAAC;QAAA;MAAA,GACA;QAAAF;QAAAC;UAAAC;QAAA;MAAA,GACA;QAAAF;QAAAC;UAAAC;QAAA;MAAA,EACA;MACAC,SACA;QAAAC;QAAAC;QAAAC;QAAAC;MAAA,GACA;QAAAH;QAAAC;QAAAC;QAAAE;MAAA,GACA;QAAAJ;QAAAC;MAAA,EACA;MACAI;MAGAC;MACAC;MACAC;QACAC;QACAb;QACAc;MACA;IACA;EACA;EACAC,WACA;EACAC;IACA;IACA;IACA;IAEA;MAAAC;QAAA;QAAA;MAAA;IAAA;MACA;MACAC;MACA;MACA;IAGA;EAEA;EACAC;IACAC;MACA;;MAEA;MACA;MACA;IAEA;;IACAC;;MAEA;MACA;MACA;IAAA,CAEA;IACA;IACA;IACA;IACA;IACAC;MACA;IACA;IACAC;MACA;IACA;EACA;AACA","names":["name","data","items","title","description","first","fields","key","label","sortable","sortDirection","class","totalRows","filter","filterOn","infoModal","id","content","computed","mounted","headers","console","methods","infoRow","deleteRow","createRow","onFiltered"],"sourceRoot":"src/components","sources":["TodoList.vue"],"sourcesContent":["<template>\n  <div class=\"todoList\">\n    <h1>Welcome To My TodoList</h1>\n    <template>\n  <b-container fluid>\n    <!-- User Interface controls -->\n    <b-row>\n\n      <b-col lg=\"4\" class=\"my-1\">\n        <b-form-group\n          label=\"Filter\"\n          label-for=\"filter-input\"\n          label-cols-sm=\"3\"\n          label-align-sm=\"right\"\n          label-size=\"sm\"\n          class=\"mb-0\"\n        >\n          <b-input-group size=\"sm\">\n            <b-form-input\n              id=\"filter-input\"\n              v-model=\"filter\"\n              type=\"search\"\n              placeholder=\"Type to Search\"\n            ></b-form-input>\n\n            <b-input-group-append>\n              <b-button :disabled=\"!filter\" @click=\"filter = ''\">Clear</b-button>\n            </b-input-group-append>\n          </b-input-group>\n        </b-form-group>\n      </b-col>\n\n      <b-col lg=\"4\" class=\"my-1\">\n        <b-form-group\n          v-model=\"sortDirection\"\n          label=\"Filter On\"\n          description=\"Leave all unchecked to filter on all data\"\n          label-cols-sm=\"3\"\n          label-align-sm=\"right\"\n          label-size=\"sm\"\n          class=\"mb-0\"\n          \n        >\n          <b-form-checkbox-group\n            v-model=\"filterOn\"\n            class=\"mt-1\"\n          >\n            <b-form-checkbox value=\"description\">Description</b-form-checkbox>\n            <b-form-checkbox value=\"title\">Title</b-form-checkbox>\n          </b-form-checkbox-group>\n        </b-form-group>\n      </b-col>\n      <b-col lg=\"4\" class=\"my-1\">\n        <b-button size=\"sm\" @click=\"createRow\">\n           Create Todo\n        </b-button>\n      </b-col>\n    </b-row>\n\n    <b-table\n      :items=\"items\"\n      :fields=\"fields\"\n      :filter=\"filter\"\n      :filter-included-fields=\"filterOn\"\n      stacked=\"md\"\n      show-empty\n      small\n      @filtered=\"onFiltered\"\n    >\n      <template #cell(description)=\"row\">\n        {{ row.value.first }} \n      </template>\n\n      <template #cell(actions)=\"row\">\n        <b-button size=\"sm\" @click=\"infoRow(row.item, row.index, $event.target)\" class=\"mr-1\">\n          View/Update\n        </b-button>\n        <b-button size=\"sm\" @click=\"deleteRow(row.item, row.index, $event.target)\">\n           Delete\n        </b-button>\n      </template>\n    </b-table>\n\n    <!-- Info modal -->\n    <!-- <b-modal :id=\"infoModal.id\" :title=\"infoModal.title\" ok-only @hide=\"resetInfoModal\">\n      <pre>{{ infoModal.content }}</pre>\n    </b-modal> -->\n  </b-container>\n</template>\n  </div>\n</template>\n\n<script>\nexport default {\n  /* eslint-disable */\n  \n  name: 'TodoList',\n  data(){\n    return {\n        items: [\n          { title: 'lab1', description: { first: 'DickersonMacdonald' } },\n          {  title: 'lab2', description: { first: 'LarsenShaw' } },\n          {\n            \n            title: 'lab3', description: { first: 'MiniNavarro' },\n            // _rowVariant: 'success'\n          },\n          {  title: 'lab4', description: { first: 'GenevaWilson' } },\n          { title: 'lab5', description: { first: 'JamiCarney' } },\n          {  title: 'lab6', description: { first: 'EssieDunlap' } },\n          { title: 'lab7', description: { first: 'ThorMacdonald' } },\n          {\n            title: 'lab8', description: { first: 'LarsenShaw' },\n            // _cellVariants: { title: 'danger' }\n          },\n          {  title: 'lab9', description: { first: 'MitziNavarro' } },\n          {  title: 'lab10', description: { first: 'GenevieveWilson' } },\n          { title: 'lab11', description: { first: 'JohnCarney' } },\n          {  title: 'lab12', description: { first: 'DickDunlap' } }\n        ],\n        fields: [\n          { key: 'description', label: 'Description', sortable: false, sortDirection: 'desc' },\n          { key: 'title', label: 'title', sortable: false, class: 'text-center' },\n          { key: 'actions', label: 'Actions' }\n        ],\n        totalRows: 1,\n\n\n        filter: null,\n        filterOn: [],\n        infoModal: {\n          id: 'info-modal',\n          title: '',\n          content: ''\n        }\n      }\n},\ncomputed: {\n    },\n    mounted(){\n            let tokenAvailable=window.localStorage.getItem('accessToken');\n            this.tokenAvailable = tokenAvailable;\n            this.totalRows = this.items.length;\n\n            this.axios.get('http://3.232.244.22/api/items','',{headers: {\"Content-type\": \"application/json\",\"Authorization\": `Bearer ${this.tokenAvailable}`}}).then((response) => {\n                //   this.resetForm();\n                console.log(response.data);\n                let tableData=response.data.items.data;\n                this.items=tableData;\n                  \n                  \n              })\n\n          },\n    methods: {\n      infoRow(item, index, button) {\n        this.$router.push('/updatetodo');\n\n        // this.infoModal.title = `Row index: ${index}`\n        // this.infoModal.content = JSON.stringify(item, null, 2)\n        // this.$root.$emit('bv::show::modal', this.infoModal.id, button)\n\n      },\n      deleteRow(item, index, button) {\n\n      // this.infoModal.title = `Row index: ${index}`\n      // this.infoModal.content = JSON.stringify(item, null, 2)\n      // this.$root.$emit('bv::show::modal', this.infoModal.id, button)\n\n      },\n      // resetInfoModal() {\n      //   this.infoModal.title = ''\n      //   this.infoModal.content = ''\n      // },\n      createRow() {\n        this.$router.push('/createtodo');\n      },\n      onFiltered(filteredItems) {\n        this.totalRows = filteredItems.length\n      }\n    },\n}\n</script>\n\n<!-- Add \"scoped\" attribute to limit CSS to this component only -->\n<style scoped>\n\n</style>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nexport default {\n  /* eslint-disable */\n\n  name: 'TodoList',\n  data() {\n    return {\n      items: [],\n      tableSize: 3,\n      size: 0,\n      fields: [{\n        key: 'description',\n        label: 'Description',\n        sortable: false,\n        sortDirection: 'desc'\n      }, {\n        key: 'title',\n        label: 'title',\n        sortable: false,\n        class: 'text-center'\n      }, {\n        key: 'actions',\n        label: 'Actions'\n      }],\n      totalRows: 1,\n      filter: null,\n      filterOn: [],\n      infoModal: {\n        id: 'info-modal',\n        title: '',\n        content: ''\n      }\n    };\n  },\n  computed: {},\n  mounted() {\n    let tokenAvailable = window.localStorage.getItem('accessToken');\n    this.tokenAvailable = tokenAvailable;\n    this.totalRows = this.items.length;\n    this.getData();\n    window.addEventListener(\"scroll\", this.onScroll);\n  },\n  destroyed() {\n    window.removeEventListener(\"scroll\", this.onScroll);\n  },\n  methods: {\n    onScroll(el) {\n      if (el.target.offsetHeight + el.target.scrollTop >= el.target.scrollHeight) {\n        this.getData1();\n      }\n    },\n    getData1() {\n      this.tableSize += 3;\n      var a = [];\n      console.log(this.size.length);\n      if (this.size >= this.tableSize) {\n        for (this.tableSize; this.tableSize >= 0; this.tableSize--) {\n          // console.log(\"asdas\",this.items)\n          a = this.size[this.tableSize];\n        }\n        this.items.push(a);\n        // for(this.size;this.this.size<tableData.length;this.size+=1){\n\n        // this.items[this.size]=tableData[this.size];\n        // } \n      }\n    },\n\n    getData() {\n      this.axios.get('http://3.232.244.22/api/items', {\n        headers: {\n          \"Content-type\": \"application/json\",\n          \"Authorization\": `Bearer ${this.tokenAvailable}`\n        }\n      }).then(response => {\n        //   this.resetForm();\n        console.log(response.data);\n        let tableData = response.data.items.data;\n        this.size = tableData;\n        let t2 = [];\n        if (tableData.length) {\n          console.log(\"Hi\");\n          for (this.tableSize; this.tableSize >= 0; this.tableSize--) {\n            // console.log(\"asdas\",this.items)\n            this.items.push(tableData[this.tableSize]);\n          }\n          console.log(\"asdas\", this.items);\n          // for(this.size;this.this.size<tableData.length;this.size+=1){\n\n          // this.items[this.size]=tableData[this.size];\n          // } \n        }\n        // this.items=tableData;  \n      });\n    },\n\n    infoRow(item, index, button) {\n      this.$router.push('/updatetodo');\n\n      // this.infoModal.title = `Row index: ${index}`\n      // this.infoModal.content = JSON.stringify(item, null, 2)\n      // this.$root.$emit('bv::show::modal', this.infoModal.id, button)\n    },\n\n    deleteRow(item, index, button) {\n      console.log(\"dataIS\", item);\n      this.axios.delete(`http://3.232.244.22/api/item/${item.id}`, {\n        headers: {\n          \"Content-type\": \"application/json\",\n          \"Authorization\": `Bearer ${this.tokenAvailable}`\n        }\n      }).then(response => {\n        console.log(response.data);\n        this.getData();\n      });\n\n      // this.infoModal.title = `Row index: ${index}`\n      // this.infoModal.content = JSON.stringify(item, null, 2)\n      // this.$root.$emit('bv::show::modal', this.infoModal.id, button)\n    },\n\n    // resetInfoModal() {\n    //   this.infoModal.title = ''\n    //   this.infoModal.content = ''\n    // },\n    createRow() {\n      this.$router.push('/createtodo');\n    },\n    onFiltered(filteredItems) {\n      this.totalRows = filteredItems.length;\n    }\n  }\n};","map":{"version":3,"mappings":";AAkGA;EACA;;EAEAA;EACAC;IACA;MACAC;MACAC;MACAC;MACAC,SACA;QAAAC;QAAAC;QAAAC;QAAAC;MAAA,GACA;QAAAH;QAAAC;QAAAC;QAAAE;MAAA,GACA;QAAAJ;QAAAC;MAAA,EAEA;MACAI;MAGAC;MACAC;MACAC;QACAC;QACAC;QACAC;MACA;IACA;EACA;EACAC,WACA;EACAC;IACA;IACA;IACA;IACA;IACAC;EAEA;EACAC;IACAD;EACA;EACAE;IACAC;MAEA;QAEA;MAGA;IACA;IACAC;MACA;MACA;MACAC;MACA;QAGA;UACA;UACAC;QAEA;QAEA;QACA;;QAEA;QACA;MAEA;IACA;;IACAC;MACA;QAAAC;UAAA;UAAA;QAAA;MAAA;QACA;QACAH;QACA;QACA;QACA;QACA;UACAA;UACA;YACA;YACA;UAEA;UACAA;UACA;;UAEA;UACA;QACA;QACA;MACA;IACA;;IACAI;MACA;;MAEA;MACA;MACA;IAEA;;IACAC;MACAL;MACA;QAAAG;UAAA;UAAA;QAAA;MAAA;QACAH;QACA;MACA;;MAEA;MACA;MACA;IAEA;;IACA;IACA;IACA;IACA;IACAM;MACA;IACA;IACAC;MACA;IACA;EACA;AACA","names":["name","data","items","tableSize","size","fields","key","label","sortable","sortDirection","class","totalRows","filter","filterOn","infoModal","id","title","content","computed","mounted","window","destroyed","methods","onScroll","getData1","console","a","getData","headers","infoRow","deleteRow","createRow","onFiltered"],"sourceRoot":"src/components","sources":["TodoList.vue"],"sourcesContent":["<template>\n  <div class=\"todoList\">\n    <div class=\"headTitle\" >\n      <h1 >Welcome To My TodoList</h1>\n    </div>\n    <template>\n  <b-container fluid style=\"height: 400px; \noverflow-y: scroll !important;\"  v-on:scroll.capture=\"onScroll\">\n    <!-- User Interface controls -->\n    <b-row>\n\n      <b-col lg=\"4\" class=\"my-1 \">\n        <b-form-group\n          label=\"Filter\"\n          label-for=\"filter-input\"\n          label-cols-sm=\"3\"\n          label-align-sm=\"right\"\n          label-size=\"sm\"\n          class=\"mb-0\"\n        >\n          <b-input-group size=\"sm\">\n            <b-form-input\n              id=\"filter-input\"\n              v-model=\"filter\"\n              type=\"search\"\n              placeholder=\"Type to Search\"\n            ></b-form-input>\n\n            <b-input-group-append>\n              <b-button :disabled=\"!filter\" @click=\"filter = ''\">Clear</b-button>\n            </b-input-group-append>\n          </b-input-group>\n        </b-form-group>\n      </b-col>\n\n      <b-col lg=\"4\" class=\"my-1 \">\n        <b-form-group\n          v-model=\"sortDirection\"\n          label=\"Filter On\"\n          label-cols-sm=\"3\"\n          label-align-sm=\"right\"\n          label-size=\"sm\"\n          class=\"mb-0\"\n          \n        >\n          <b-form-checkbox-group\n            v-model=\"filterOn\"\n            class=\"mt-1\"\n          >\n            <b-form-checkbox value=\"description \" ><span class=\"txt-check\">Description</span></b-form-checkbox>\n            <b-form-checkbox value=\"title\"><span class=\"txt-check\">Title</span></b-form-checkbox>\n          </b-form-checkbox-group>\n        </b-form-group>\n      </b-col>\n      <b-col lg=\"4\" class=\"my-1 itemCl\">\n        <b-button size=\"sm\" @click=\"createRow\" class=\"clearbtn\">\n           Create Todo\n        </b-button>\n      </b-col>\n    </b-row>\n\n    <b-table   class=\"\"\n      :items=\"items\"\n      :fields=\"fields\"\n      :filter=\"filter\"\n      :filter-included-fields=\"filterOn\"\n      stacked=\"md\"\n      show-empty\n      small\n      hover\n      @filtered=\"onFiltered\"\n    >\n      <template #cell(description)=\"row\">\n        {{ row.item.description}} \n      </template>\n\n      <template #cell(actions)=\"row\" >\n       <div class=\"btnTable\">\n        <b-button size=\"sm\" @click=\"infoRow(row.item, row.index, $event.target)\" class=\"mr-1 tableBtn tableBtn1\">\n          View/Update\n        </b-button>\n        <b-button size=\"sm\" @click=\"deleteRow(row.item, row.index, $event.target)\" class=\"tableBtn tableBtn2\">\n           Delete\n        </b-button>\n       </div>\n      </template>\n    </b-table>\n\n    <!-- Info modal -->\n    <!-- <b-modal :id=\"infoModal.id\" :title=\"infoModal.title\" ok-only @hide=\"resetInfoModal\">\n      <pre>{{ infoModal.content }}</pre>\n    </b-modal> -->\n  </b-container>\n</template>\n  </div>\n</template>\n\n<script>\nexport default {\n  /* eslint-disable */\n  \n  name: 'TodoList',\n  data(){\n    return {\n        items: [],\n        tableSize:3,\n        size:0,\n        fields: [\n          { key: 'description', label: 'Description', sortable: false, sortDirection: 'desc' },\n          { key: 'title', label: 'title', sortable: false, class: 'text-center' },\n          { key: 'actions', label: 'Actions' },\n          \n        ],\n        totalRows: 1,\n\n\n        filter: null,\n        filterOn: [],\n        infoModal: {\n          id: 'info-modal',\n          title: '',\n          content: ''\n        }\n      }\n},\ncomputed: {\n    },\n    mounted(){\n            let tokenAvailable=window.localStorage.getItem('accessToken');\n            this.tokenAvailable = tokenAvailable;\n            this.totalRows = this.items.length;\n            this.getData();\n            window.addEventListener(\"scroll\",   this.onScroll );\n            \n          },\n          destroyed() {\n    window.removeEventListener(\"scroll\",   this.onScroll );\n  },\n    methods: {\n      onScroll (el) {\n\n\t\t\tif ((el.target.offsetHeight + el.target.scrollTop) >= el.target.scrollHeight) {\n        \n        this.getData1();\n                \n            \n}\n    },\n    getData1(){\nthis.tableSize+=3;\nvar a=[];\nconsole.log(this.size.length)\nif(this.size>=this.tableSize){\n\n\n      for(this.tableSize;this.tableSize>=0;this.tableSize--){\n                  // console.log(\"asdas\",this.items)\n                 a=this.size[this.tableSize];\n                  \n                }\n\n                this.items.push(a);\n                    // for(this.size;this.this.size<tableData.length;this.size+=1){\n                      \n// this.items[this.size]=tableData[this.size];\n                    // } \n             \n                  }     \n      },\n      getData(){\n        this.axios.get('http://3.232.244.22/api/items',{headers: {\"Content-type\": \"application/json\",\"Authorization\": `Bearer ${this.tokenAvailable}`}}).then((response) => {\n                //   this.resetForm();\n                console.log(response.data);\n                let tableData=response.data.items.data;\n                this.size=tableData;\n                let t2=[];\n                if(tableData.length){\n                console.log(\"Hi\");\n                for(this.tableSize;this.tableSize>=0;this.tableSize--){\n                  // console.log(\"asdas\",this.items)\n                  this.items.push(tableData[this.tableSize]);\n                  \n                }\n                console.log(\"asdas\",this.items)\n                    // for(this.size;this.this.size<tableData.length;this.size+=1){\n                      \n// this.items[this.size]=tableData[this.size];\n                    // } \n                }\n                // this.items=tableData;  \n              })\n      },\n      infoRow(item, index, button) {\n        this.$router.push('/updatetodo');\n\n        // this.infoModal.title = `Row index: ${index}`\n        // this.infoModal.content = JSON.stringify(item, null, 2)\n        // this.$root.$emit('bv::show::modal', this.infoModal.id, button)\n\n      },\n      deleteRow(item, index, button) {\n        console.log(\"dataIS\",item)\n        this.axios.delete(`http://3.232.244.22/api/item/${item.id}`,{headers: {\"Content-type\": \"application/json\",\"Authorization\": `Bearer ${this.tokenAvailable}`}}).then((response) => {\n        console.log(response.data);\n        this.getData();        \n        })\n\n      // this.infoModal.title = `Row index: ${index}`\n      // this.infoModal.content = JSON.stringify(item, null, 2)\n      // this.$root.$emit('bv::show::modal', this.infoModal.id, button)\n\n      },\n      // resetInfoModal() {\n      //   this.infoModal.title = ''\n      //   this.infoModal.content = ''\n      // },\n      createRow() {\n        this.$router.push('/createtodo');\n      },\n      onFiltered(filteredItems) {\n        this.totalRows = filteredItems.length\n      }\n    },\n}\n</script>\n\n<!-- Add \"scoped\" attribute to limit CSS to this component only -->\n<style scoped>\n\n</style>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}